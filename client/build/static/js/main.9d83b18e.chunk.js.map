{"version":3,"sources":["components/List/index.js","utils/API.js","components/Grid/index.js","components/Input/index.js","pages/Habits.js","App.js","registerServiceWorker.js","index.js"],"names":["List","_ref","children","react_default","a","createElement","className","ListItem","_ref2","API","_getHabit$getHabit$de","getHabit","axios","get","Object","defineProperty","id","delete","habitData","post","rewardsData","Container","fluid","concat","Row","Input","props","assign","Habits","_useState","useState","_useState2","slicedToArray","habits","setHabits","_useState3","_useState4","formObject","setFormObject","useEffect","then","res","data","catch","err","console","log","components_Input","onChange","e","_e$target","target","habitName","value","objectSpread","name","placeholder","length","key","_id","react_router_dom","to","App","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9d83b18e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This file exports both the List and ListItem components\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all habits\r\n  getHabit: function() {\r\n    return axios.get(\"/api/habits\");\r\n  },\r\n  // Gets the habits with the given id\r\n  getHabit: function(id) {\r\n    return axios.get(\"/api/habits/\" + id);\r\n  },\r\n  // Deletes the habit with the given id\r\n  deleteHabit: function(id) {\r\n    return axios.delete(\"/api/habits/\" + id);\r\n  },\r\n  // Saves a habit to the database\r\n  saveHabit: function(habitData) {\r\n    return axios.post(\"/api/habits\", habitData);\r\n  },\r\n  // Gets all rewards\r\n  getReward: function() {\r\n    return axios.get(\"/api/rewards\");\r\n  },\r\n  // Gets the rewards with the given id\r\n  getReward: function(id) {\r\n    return axios.get(\"/api/rewards/\" + id);\r\n  },\r\n  // Deletes the rewards with the given id\r\n  deleteReward: function(id) {\r\n    return axios.delete(\"/api/rewards/\" + id);\r\n  },\r\n  // Saves a rewards to the database\r\n  saveReward: function(rewardsData) {\r\n    return axios.post(\"/api/rewards\",rewardsData);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n// This file exports the Input component to be used on where needed\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// this is needed if there is only one function?\r\nexport default Input;","import React, { useState, useEffect } from \"react\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Input from \"../components/Input\";\r\n\r\nfunction Habits() {\r\n  const [habits, setHabits] = useState([]);\r\n  const [formObject, setFormObject] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadHabits()\r\n  }, [])\r\n\r\n  function loadHabits() {\r\n   API.getHabit()\r\n    .then(res =>\r\n      setHabits(res.data)\r\n    ) \r\n    .catch(err => console.log(\"error in loadHabit\", err));\r\n  };\r\n\r\n  // grabs values on change and update onject\r\n  function handleInputChange(e) {\r\n    const { habitName, value } = e.target;\r\n    setFormObject({...formObject, [habitName]: value})\r\n  };\r\n\r\n  // takes object and calls save endpoint when form is submitted\r\n  // function handleFormSubmit(e) {\r\n    // e.preventDefault();\r\n    // may need to expand this logic out\r\n    // if (formObject.habitName) {\r\n      // API.saveHabit\r\n\r\n    // }\r\n  // }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <h1>Habits you have selected</h1>\r\n        <form>\r\n          <Input\r\n            onChange={handleInputChange}\r\n            name=\"habitName\"\r\n            placeholder=\"Habit (required)\"\r\n          />\r\n        </form>\r\n      </Row>\r\n      <Row>\r\n\r\n      {habits.length ? (\r\n        <List>\r\n          <ListItem key={habits._id}>\r\n            <Link to={\"habits/\" + habits._id}>\r\n              <strong>\r\n                {habits.habitName}\r\n              </strong>\r\n            </Link>\r\n          </ListItem>\r\n        </List>\r\n    ) : (\r\n      <h3> No Resutls to Display</h3>\r\n    )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Habits;","import React, { Component } from \"react\";\nimport Habits from \"./pages/Habits\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            {/* need to change default route to login page */}\n            <Route exact path=\"/\" component={Habits}/>\n            <Route exact path=\"/habits\" component={Habits}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}